import os

from aiogram.types import ContentType, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import InputFile, InputMedia

from loader import dp, connection, cursor, bot
from .menu import get_recipe
from .settings import filter_recipes
from .functions_loader import get_user_theme_picture


categories = ['—Å—É–ø—ã', '2-–µ –±–ª—é–¥–∞', '–∑–∞–∫—É—Å–∫–∏', '—Å–∞–ª–∞—Ç—ã', '–≤—ã–ø–µ—á–∫–∞', '—Å–æ—É—Å—ã', '–∑–∞–≥–æ—Ç–æ–≤–∫–∏', '–¥–µ—Å–µ—Ä—Ç—ã', '–Ω–∞–ø–∏—Ç–∫–∏']


def get_category(recipe_id: int) -> str:
    category = cursor.execute("SELECT type FROM recipes WHERE id = ?", (recipe_id,)).fetchone()[0]
    return category


@dp.callback_query_handler(text='–∫–∞—Ç–µ–≥–æ—Ä–∏–∏11')
async def open_categories(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))
    user_id = call.from_user.id

    image = get_user_theme_picture(user_id, 'categories')
    ikb_menu = InlineKeyboardMarkup(row_width=1,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='ü´ï –°—É–ø—ã', callback_data=f'—Ç–∏–ø_—Å—É–ø—ã'),
                                            InlineKeyboardButton(text='üçõ 2-–µ –±–ª—é–¥–∞', callback_data='—Ç–∏–ø_–≤—Ç–æ—Ä—ã–µ –±–ª—é–¥–∞'),
                                            InlineKeyboardButton(text='ü•™ –ó–∞–∫—É—Å–∫–∏', callback_data='—Ç–∏–ø_–∑–∞–∫—É—Å–∫–∏'),

                                        ],
                                        [
                                            InlineKeyboardButton(text='ü•ó –°–∞–ª–∞—Ç—ã', callback_data='—Ç–∏–ø_—Å–∞–ª–∞—Ç—ã'),
                                            InlineKeyboardButton(text='üçï –í—ã–ø–µ—á–∫–∞', callback_data='—Ç–∏–ø_–≤—ã–ø–µ—á–∫–∞'),
                                            InlineKeyboardButton(text='ü´ñ –°–æ—É—Å—ã', callback_data='—Ç–∏–ø_—Å–æ—É—Å—ã'),
                                        ],
                                        [
                                            InlineKeyboardButton(text='ü•í –ó–∞–≥–æ—Ç–æ–≤–∫–∏', callback_data='—Ç–∏–ø_–∑–∞–≥–æ—Ç–æ–≤–∫–∏'),
                                            InlineKeyboardButton(text='üç© –î–µ—Å–µ—Ä—Ç—ã', callback_data='—Ç–∏–ø_–¥–µ—Å–µ—Ä—Ç—ã'),
                                            InlineKeyboardButton(text='üçπ –ù–∞–ø–∏—Ç–∫–∏', callback_data='—Ç–∏–ø_–Ω–∞–ø–∏—Ç–∫–∏'),
                                        ],
                                        [
                                            InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='–û–µ—Ü–µ–ø—Ç—ã'),
                                        ]
                                    ],
                                    )
    message_to_edit = call.message.message_id
    chat_id = call.message.chat.id
    media = InputMedia(media=image)
    await bot.edit_message_media(media=media, chat_id=chat_id, message_id=message_to_edit, reply_markup=ikb_menu)


@dp.callback_query_handler(text_contains='—Ç–∏–ø')
async def show_recipes_from_category(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    user_id = call.from_user.id
    category = call.data.split('_')[1]
    recipes_ids = cursor.execute("SELECT id FROM recipes WHERE type = ?", (category,)).fetchall()

    ids = []
    for i in recipes_ids:
        ids.append(i[0])

    if not ids:
        await call.message.answer("–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ü–µ–ø—Ç–æ–≤!")
    else:
        user_filters = cursor.execute("SELECT filters FROM profiles WHERE id = ?", (user_id,)).fetchone()[0].split()
        ids = filter_recipes(ids, user_filters[0], filter_type=int(user_filters[1]))

        await get_recipe(call, ids, ids[0], call=True)





