import time
import random

from aiogram.types import CallbackQuery

from loader import dp, connection, cursor, bot, p2p

from ..menu.search_author import get_profile
from ..users.experience import give_experience
from .achievements import give_achievements
from data.config import admins

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


vip_price = 150


def check_vip(user_id: int) -> int:
    if user_id == admins[0]:
        return 200000000

    user_vip_time = cursor.execute("SELECT VIP FROM profiles WHERE id = ?", (user_id,)).fetchone()[0]
    now_time = int(time.time())

    if now_time >= user_vip_time:
        return 0
    return user_vip_time - now_time


@dp.callback_query_handler(text='–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–ø')
async def vip_settings(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    ikb_menu = InlineKeyboardMarkup(row_width=1,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='‚ùì –ß—Ç–æ –¥–∞–µ—Ç VIP?', callback_data='—á—Ç–æ –¥–∞–µ—Ç –≤–∏–ø'),
                                            InlineKeyboardButton(text='ü§¥üèª –ú–æ–π VIP', callback_data='–≤–∏–ø')
                                        ],
                                        [
                                            InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥',
                                                                 callback_data='–Ω–∞–∑–∞–¥ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–ø–∞')
                                        ]
                                    ])
    chat_id = call.message.chat.id
    message_id = call.message.message_id

    await bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=ikb_menu)


@dp.callback_query_handler(text='—á—Ç–æ –¥–∞–µ—Ç –≤–∏–ø')
async def vip_info(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    global vip_price
    text = f"<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ VIP-–ø–æ–¥–ø–∏—Å–∫–µ</b>\n\n" \
           f"–ë–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–¥–ø–∏—Å–∫–µ –≤–∞–º —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–∞–∫:\n\n" \
           f"<i>- üé® –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –±–æ—Ç–∞\n" \
           f"- üìí –¥–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç—å—è–º –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏\n" \
           f"(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏ —Å—Ç–∞—Ç—å–∏ –≤ –ø–æ–∏—Å–∫–µ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø–µ—Ä–µ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏)\n" \
           f"- üìò –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á–∏—Ç–∞—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫\n" \
           f"- üß© —É—á–∞—Å—Ç–∏–µ –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞—Ö\n" \
           f"- üèãüèª –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π</i>\n\n" \
           f"–¢–∞–∫–∂–µ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è —Å—Ç–∞—Ç—É—Å <b><i>üëë VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</i></b>.\n\n" \
           f"–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ - {vip_price} —Ä—É–±–ª–µ–π –∑–∞ 30 –¥–Ω–µ–π.\n" \
           f"–ü–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ /help"

    ikb_menu = InlineKeyboardMarkup(row_width=1, inline_keyboard=[
        [
            InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='–Ω–∞–∑–∞–¥ –∏–∑ –≤–∏–ø')
        ]
    ])

    chat_id = call.message.chat.id
    message_id = call.message.message_id

    await bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=text, reply_markup=ikb_menu)


@dp.callback_query_handler(text='–≤–∏–ø')
async def vip(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    user_id = call.from_user.id

    ikb_menu = InlineKeyboardMarkup(row_width=1)

    end_time = check_vip(user_id)
    if end_time:
        end_time = int(end_time / 24 / 60 / 60)
        vip_status = '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'
        if end_time < 1:
            end_vip_time = '–º–µ–Ω—å—à–µ –¥–Ω—è'
        elif 21 > end_time > 10:
            end_vip_time = f'{end_time} –¥–Ω–µ–π'
        elif str(end_time).endswith('2') or str(end_time).endswith('3') or str(end_time).endswith('4'):
            end_vip_time = f'{end_time} –¥–Ω—è'
        elif str(end_time).endswith('1'):
            end_vip_time = f'{end_time} –¥–µ–Ω—å'
        else:
            end_vip_time = f'{end_time} –¥–Ω–µ–π'

        text = f'–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –ø–æ–¥–ø–∏—Å–∫–∏: <i>{end_vip_time}</i>\n' \
               f'------------------------------------\n'
    else:
        ikb_menu.add(InlineKeyboardButton(text='ü§¥üèª –ö—É–ø–∏—Ç—å VIP', callback_data='–∫—É–ø–∏—Ç—å –≤–∏–ø'))
        vip_status = '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'

        text = ''

    user_vips_amount = cursor.execute("SELECT get_VIP_date FROM profiles WHERE id = ?", (user_id,)).fetchone()[0]
    if not user_vips_amount:
        user_vips_amount = 0
    else:
        user_vips_amount = int(user_vips_amount)

    text += f"–í—Å–µ–≥–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö VIP: <i>{user_vips_amount}</i>"

    message_text = f"<b>üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∏ VIP</b>\n\n" \
                   f"VIP —Å—Ç–∞—Ç—É—Å: <i>{vip_status}</i>\n" \
                   f"------------------------------------\n" \
                   f"{text}"

    ikb_menu.add(InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='–Ω–∞–∑–∞–¥ –∏–∑ –≤–∏–ø'))

    chat_id = call.message.chat.id
    message_id = call.message.message_id

    await bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=message_text, reply_markup=ikb_menu)


@dp.callback_query_handler(text='–∫—É–ø–∏—Ç—å –≤–∏–ø')
async def buy_vip(call: CallbackQuery):

    user_id = call.from_user.id

    global vip_price

    if check_vip(user_id):
        await bot.answer_callback_query(str(call.id), text='–í—ã —É–∂–µ VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!', show_alert=True)
    else:
        await bot.answer_callback_query(str(call.id))

        if_bill_exists = cursor.execute("SELECT bill_id FROM bills WHERE user_id = ?", (user_id,)).fetchone()
        if if_bill_exists:
            cursor.execute("DELETE FROM bills WHERE user_id = ?", (user_id,))
            connection.commit()

        comment = f"{user_id}_{random.randint(1000, 9999)}"
        bill = p2p.bill(amount=vip_price, lifetime=15, comment=comment)

        bill_id = bill.bill_id
        pay_url = bill.pay_url

        cursor.execute("INSERT INTO bills VALUES (?, ?, ?)", (user_id, bill_id, pay_url))
        connection.commit()

        ikb_menu = InlineKeyboardMarkup(row_width=1,
                                        inline_keyboard=[
                                            [
                                                InlineKeyboardButton(text='‚ÜóÔ∏è –û–ø–ª–∞—Ç–∏—Ç—å',
                                                                     url=pay_url),
                                                InlineKeyboardButton(text='‚ùáÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É',
                                                                     callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
                                            ]
                                        ])

        await call.message.answer(f"üíµ –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å VIP –Ω–∞ 30 –¥–Ω–µ–π - {vip_price} —Ä—É–±–ª–µ–π. "
                                  f"–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ VIP —Å—Ç–∞—Ç—É—Å–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å "
                                  f"–≤ <i>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å -> VIP -> –ß—Ç–æ –¥–∞–µ—Ç VIP?</i>", reply_markup=ikb_menu)


@dp.callback_query_handler(text='–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
async def check_pay(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    user_id = call.from_user.id

    if_bill_exists = cursor.execute("SELECT * FROM bills WHERE user_id = ?", (user_id,)).fetchmany(1)
    if if_bill_exists:
        bill_id = cursor.execute("SELECT bill_id FROM bills WHERE user_id = ?", (user_id,)).fetchone()[0]

        ikb_menu = InlineKeyboardMarkup(row_width=1,
                                        inline_keyboard=[
                                            [
                                                InlineKeyboardButton(text='‚ùáÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É',
                                                                     callback_data=f'–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
                                            ]
                                        ])

        if str(p2p.check(bill_id=bill_id).status) == 'PAID':

            now_time = int(time.time())
            end_vip_time = now_time + 30 * 24 * 60 * 60

            cursor.execute("UPDATE profiles SET VIP = ? WHERE id = ?", (end_vip_time, user_id))
            cursor.execute("DELETE FROM bills WHERE user_id = ?", (user_id,))

            user_vips_amount = \
                cursor.execute("SELECT get_VIP_date FROM profiles WHERE id = ?", (user_id,)).fetchone()[0]
            if not user_vips_amount:
                user_vips_amount = 0
            else:
                user_vips_amount = int(user_vips_amount)

            cursor.execute("UPDATE profiles SET get_VIP_date = ? WHERE id = ?", (str(user_vips_amount + 1), user_id))
            connection.commit()

            give_experience(user_id, 12)
            await give_achievements(user_id, 'üëë')

            if user_vips_amount >= 4:
                await give_achievements(user_id, 'ü§¥üèª')

            await call.message.answer("‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ <b>üëë VIP –ø–æ–¥–ø–∏—Å–∫—É</b> –Ω–∞ 30 –¥–Ω–µ–π. "
                                      "–°–æ –≤—Å–µ–º–∏ –±–æ–Ω—É—Å–∞–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ "
                                      "<i>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å -> VIP -> –ß—Ç–æ –¥–∞–µ—Ç VIP?</i>\n"
                                      "/menu")

        else:
            await call.message.answer("‚ùå –ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á–µ—Ç. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ "
                                      "–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—â–µ —Ä–∞–∑. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–ª–∞—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: "
                                      "<i>/help -> –ø—Ä–æ–±–ª–µ–º–∞</i>", reply_markup=ikb_menu)
    else:
        await call.message.answer("–°—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


@dp.callback_query_handler(text='–Ω–∞–∑–∞–¥ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–ø–∞')
async def back_from_vip_settings(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    user_id = call.from_user.id

    subscriptions = cursor.execute("SELECT subscriptions FROM profiles WHERE id = ?", (user_id,)).fetchone()[0]
    if not subscriptions:
        amount_subs = 0
    else:
        amount_subs = len(subscriptions.split())

    ikb_menu = InlineKeyboardMarkup(row_width=1,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='üç™ –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã', callback_data='–º–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã'),
                                            # InlineKeyboardButton(text='üñå –ò–∑–º–µ–Ω–∏—Ç—å', callback_data='–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
                                            InlineKeyboardButton(text='üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', callback_data='–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')
                                        ],
                                        [
                                            InlineKeyboardButton(text=f'üñá –ü–æ–¥–ø–∏—Å–∫–∏ ({amount_subs})',
                                                                 callback_data='–º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏'),
                                            InlineKeyboardButton(text='üëë VIP', callback_data='–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–ø')
                                        ],
                                        [
                                            InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='–Ω–∞–∑–∞–¥_')
                                        ]
                                    ])
    chat_id = call.message.chat.id
    message_id = call.message.message_id

    await bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=ikb_menu)


@dp.callback_query_handler(text='–Ω–∞–∑–∞–¥ –∏–∑ –≤–∏–ø')
async def back_from_vip(call: CallbackQuery):
    await bot.answer_callback_query(str(call.id))

    user_id = call.from_user.id

    user_profile = get_profile(user_id)

    ikb_menu = InlineKeyboardMarkup(row_width=1,
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(text='‚ùì –ß—Ç–æ –¥–∞–µ—Ç VIP?', callback_data='—á—Ç–æ –¥–∞–µ—Ç –≤–∏–ø'),
                                            InlineKeyboardButton(text='ü§¥üèª –ú–æ–π VIP', callback_data='–≤–∏–ø')
                                        ],
                                        [
                                            InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥',
                                                                 callback_data='–Ω–∞–∑–∞–¥ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–ø–∞')
                                        ]
                                    ])
    chat_id = call.message.chat.id
    message_id = call.message.message_id

    await bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=user_profile, reply_markup=ikb_menu)






